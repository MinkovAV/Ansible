---
# tasks file for docker

# Подгружаем дополнительные модули ядра
#- name: Prepare systemctl
#  import_tasks: sysctl.yml

# Удаляем модули pip если это необходимо
# name: UnInstall pip modules
  #include_tasks: uninstall_pip_modules.yml

# Отключение SWAP
- name: SWAP disable
  include_tasks: disable_swap.yml

# Подгружаем необходимые модули в ядро
#- name: Load modules to core
#  include_tasks: load_modules_to_core.yml

# Устаовка Kubernetes
- name: Install Kubernetes
  include_tasks: kubernetes.yml

# Устанавливаем Docker
- name: Install Docker container engine
  include_tasks: docker.yml

#Устанавливаем etcd
- name: Install ETCD
  include_tasks: etcd.yml

# name: Instal HAproxy
  #include_tasks: install_HAproxy.yml

#Устанавливаем сертификаты
#- name: Install certs for ETCD
#  include_tasks: etcd-tls.yml

#Устанавливаем сертификаты
#- name: Install ETCD
  #include_tasks: etcd.yml

#- name: Install Kubernetes
#  include_tasks: kubernetes.yml


#- name: Copy Docker engine service file
#  template:
#    src: docker.service.j2
#    dest: "{{ systemd_dir }}/docker.service"
#    owner: root
#    group: docker
#    mode: 0755

#- name: Create a directory if it does not exist
#  ansible.builtin.file:
#    path: /etc/sysconfig
#    state: directory
#    owner: root
#    group: docker
#    mode: '0755'

#- name: Copy Docker environment config file
#  template: 
#    src: docker.j2
#    dest: "{{ system_env_dir }}/docker"

#- name: Add any insecure registries to Docker config
#  when: insecure_registries is defined and insecure_registries | length > 0
#  lineinfile: 
#    dest: "{{ system_env_dir }}/docker"
#    regexp: ^INSECURE_REGISTRY= line=INSECURE_REGISTRY="{% for reg in insecure_registries %}--insecure-registry={{ reg }} {% endfor %}"

#- name: Add registry to Docker config
#  when: add_registry is defined and add_registry > 0
#  lineinfile: 
#    dest: "{{ system_env_dir }}/docker"
#    regexp: ^ADD_REGISTRY= line=ADD_REGISTRY="{% for reg in add_registry %}--add-registry={{ reg }} {%endfor %}"

#- name: Enable and check Docker service
#  systemd:
#    name: docker
#    daemon_reload: yes
#    state: started
#    enabled: yes
#  register: started_docker
...